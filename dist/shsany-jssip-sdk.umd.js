(function(c,u){typeof exports=="object"&&typeof module<"u"?module.exports=u(require("jssip")):typeof define=="function"&&define.amd?define(["jssip"],u):(c=typeof globalThis<"u"?globalThis:c||self,c.ShsanyJSSipSDK=u(c.JSSIP))})(this,function(c){"use strict";var f=Object.defineProperty;var I=(c,u,l)=>u in c?f(c,u,{enumerable:!0,configurable:!0,writable:!0,value:l}):c[u]=l;var a=(c,u,l)=>I(c,typeof u!="symbol"?u+"":u,l);function u(s){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(s){for(const t in s)if(t!=="default"){const i=Object.getOwnPropertyDescriptor(s,t);Object.defineProperty(e,t,i.get?i:{enumerable:!0,get:()=>s[t]})}}return e.default=s,Object.freeze(e)}const l=u(c);var n=(s=>(s.MIC_ERROR="MIC_ERROR",s.ERROR="ERROR",s.CONNECTED="CONNECTED",s.DISCONNECTED="DISCONNECTED",s.REGISTERED="REGISTERED",s.UNREGISTERED="UNREGISTERED",s.REGISTER_FAILED="REGISTER_FAILED",s.INCOMING_CALL="INCOMING_CALL",s.OUTGOING_CALL="OUTGOING_CALL",s.IN_CALL="IN_CALL",s.HOLD="HOLD",s.CALL_END="CALL_END",s.MUTE="MUTE",s.UNMUTE="UNMUTE",s.LATENCY_STAT="LATENCY_STAT",s.MESSAGE_INCOMING="MESSAGE_INCOMING",s.Idle="Idle",s))(n||{}),R=(s=>(s.OUTBOUND="outbound",s.INBOUND="inbound",s))(R||{});class L{constructor(e){a(this,"constraints",{audio:!0,video:!1});a(this,"audioView",document.createElement("audio"));a(this,"ua");a(this,"socket");a(this,"localAgent");a(this,"outgoingSession");a(this,"incomingSession");a(this,"currentSession");a(this,"localIp");a(this,"direction");a(this,"currentLatencyStatTimer");a(this,"currentStatReport");a(this,"stateEventListener");a(this,"checkMic");a(this,"sendMessage",(e,t)=>{let i={contentType:"text/plain"};this.ua.sendMessage(e,t,i)});this.ua=null,this.socket=null,this.localIp="",this.checkMic=e.checkMic,this.localAgent=e.extNo,e.stateEventListener!==null&&(this.stateEventListener=e.stateEventListener),e.checkMic&&this.micCheck(),this.sipInit({username:e.extNo,password:e.extPwd,serverIp:e.fsHost,deviceIP:e.host,port:e.port})}sipInit(e){const{username:t,password:i,serverIp:o,deviceIP:p,port:g=5060}=e;this.localIp=p,this.socket=new l.WebSocketInterface(`wss://${o}:7443`);let m={sockets:[this.socket],uri:`sip:${t}@${o}:${g};transport=wss`,password:i,outbound_proxy_set:`ws://${o}:7443`,contact_uri:`sip:${t}@${p}:20455;rtcweb-breaker=yes;transport=ws`,session_timers:!1,register:!0,display_name:t,register_expires:120,mediaconstraints:{}};this.ua=new l.UA(m),this.ua.on("connected",r=>{this.onChangeState(n.CONNECTED,null)}),this.ua.on("disconnected",r=>{this.ua.stop(),r.error&&this.onChangeState(n.ERROR,{msg:"websocket连接失败,请检查地址或网络"})}),this.ua.on("registered",r=>{this.onChangeState(n.REGISTERED,{localAgent:this.localAgent})}),this.ua.on("unregistered",r=>{this.ua.stop(),this.onChangeState(n.UNREGISTERED,{localAgent:this.localAgent})}),this.ua.on("registrationFailed",r=>{this.onChangeState(n.REGISTER_FAILED,{msg:"注册失败"+r.cause})}),this.ua.on("registrationExpiring",()=>{this.ua.register()}),this.ua.on("newRTCSession",r=>{const d=r.session;let C;r.originator==="remote"?(this.incomingSession=r.session,this.currentSession=d,this.direction=R.INBOUND,C=n.INCOMING_CALL):(this.direction=R.OUTBOUND,C=n.OUTGOING_CALL),d.on("peerconnection",h=>{this.handleAudio(h.peerconnection)}),d.on("progress",h=>{this.onChangeState(C,{direction:this.direction,otherLegNumber:r.request.from.uri.user,callId:r.session.id,isTransfer:r.request.getHeader("X-Is-From-Transfer")})}),d.on("accepted",()=>{this.onChangeState(n.IN_CALL,null)}),d.on("ended",h=>{var S;const E={answered:!0,cause:h.cause,code:((S=h.message)==null?void 0:S.status_code)??0,originator:h.originator};this.cleanCallingData(),this.onChangeState(n.CALL_END,E)}),d.on("failed",h=>{var S;const E={answered:!1,cause:h.cause,code:((S=h.message)==null?void 0:S.status_code)??0,originator:h.originator};this.cleanCallingData(),this.onChangeState(n.CALL_END,E)}),d.on("hold",h=>{this.onChangeState(n.HOLD,null)}),d.on("unhold",h=>{this.onChangeState(n.IN_CALL,null)})}),this.ua.on("newMessage",r=>{switch(r.message.direction){case"incoming":const d=r.request.body;if(!d)return;this.onChangeState(n.MESSAGE_INCOMING,d)}}),this.ua.start()}onChangeState(e,t){this.stateEventListener!==void 0&&this.stateEventListener(e,t)}handleAudio(e){this.audioView.autoplay=!0,this.currentStatReport={outboundPacketsSent:0,outboundLost:0,inboundLost:0,inboundPacketsSent:0},this.currentLatencyStatTimer=setInterval(()=>{e.getStats().then(t=>{t.forEach(o=>{if(o.type=="media-source"&&(this.currentStatReport.outboundAudioLevel=o.audioLevel),!(o.type!="remote-inbound-rtp"&&o.type!="inbound-rtp"&&o.type!="remote-outbound-rtp"&&o.type!="outbound-rtp"))switch(o.type){case"outbound-rtp":this.currentStatReport.outboundPacketsSent=o.packetsSent;break;case"remote-inbound-rtp":this.currentStatReport.outboundLost=o.packetsLost,this.currentStatReport.roundTripTime=o.roundTripTime;break;case"inbound-rtp":this.currentStatReport.inboundLost=o.packetsLost,this.currentStatReport.inboundAudioLevel=o.audioLevel;break;case"remote-outbound-rtp":this.currentStatReport.inboundPacketsSent=o.packetsSent;break}});let i={latencyTime:0,upLossRate:0,downLossRate:0,downAudioLevel:0,upAudioLevel:0};this.currentStatReport.inboundAudioLevel!=null&&(i.downAudioLevel=this.currentStatReport.inboundAudioLevel),this.currentStatReport.outboundAudioLevel!=null&&(i.upAudioLevel=this.currentStatReport.outboundAudioLevel),this.currentStatReport.inboundLost&&this.currentStatReport.inboundPacketsSent&&(i.downLossRate=this.currentStatReport.inboundLost/this.currentStatReport.inboundPacketsSent),this.currentStatReport.outboundLost&&this.currentStatReport.outboundPacketsSent&&(i.upLossRate=this.currentStatReport.outboundLost/this.currentStatReport.outboundPacketsSent),this.currentStatReport.roundTripTime!=null&&(i.latencyTime=Math.floor(this.currentStatReport.roundTripTime*1e3)),console.debug("上行/下行(丢包率):"+(i.upLossRate*100).toFixed(2)+"% / "+(i.downLossRate*100).toFixed(2)+"%","延迟:"+i.latencyTime.toFixed(2)+"ms"),this.onChangeState(n.LATENCY_STAT,i)})},1e3),"addTrack"in e?e.ontrack=t=>{t.streams.length>0&&t.streams[0].active&&(this.audioView.srcObject=t.streams[0])}:e.onaddstream=t=>{const i=t.stream;i.active&&(this.audioView.srcObject=i)}}register(){this.ua.isConnected()?this.ua.register():this.onChangeState(n.ERROR,{msg:"websocket尚未连接，请先连接ws服务器."})}unregister(){this.ua&&this.ua.isConnected()&&this.ua.isRegistered()?this.ua.unregister({all:!0}):this.onChangeState(n.ERROR,{msg:"尚未注册，操作禁止."})}call(e,t){if(this.checkMic&&this.micCheck(),this.ua&&this.ua.isRegistered()){let o={eventHandlers:{peerconnection:g=>{this.handleAudio(g.peerconnection)}},mediaConstraints:{audio:!0,video:t?{width:{ideal:1280},height:{ideal:720},frameRate:{ideal:30,max:60}}:!1},pcConfig:{},rtcOfferConstraints:{offerToReceiveAudio:!0,offerToReceiveVideo:t}};const p=`sip:${e}@${this.localIp}:5060`;this.outgoingSession=this.ua.call(p,o),this.currentSession=this.outgoingSession}else return this.onChangeState(n.ERROR,{msg:"请在注册成功后再发起外呼请求."}),""}answer(){this.currentSession&&this.currentSession.isInProgress()?this.currentSession.answer({mediaConstraints:this.constraints}):this.onChangeState(n.ERROR,{msg:"非法操作，通话尚未建立或状态不正确，请勿操作"})}hangup(){this.currentSession&&!this.currentSession.isEnded()?this.currentSession.terminate():this.onChangeState(n.ERROR,{msg:"当前通话不存在，无法执行挂断操作。"})}hold(){var i;if(console.log("---保持",this.currentSession),!this.currentSession||!this.checkCurrentCallIsActive())return;let e={useUpdate:!1},t=()=>{};try{(i=this.currentSession)==null||i.hold(e,t)}catch(o){this.onChangeState(n.ERROR,{msg:"保持通话失败: "+o})}}unhold(){if(!this.currentSession||!this.checkCurrentCallIsActive()||!this.currentSession.isOnHold())return;let e={useUpdate:!1},t=()=>{};this.currentSession.unhold(e,t)}mute(){!this.currentSession||!this.checkCurrentCallIsActive()||(this.currentSession.mute(),this.onChangeState(n.MUTE,null))}unmute(){!this.currentSession||!this.checkCurrentCallIsActive()||(this.currentSession.unmute(),this.onChangeState(n.UNMUTE,null))}transfer(e){!this.currentSession||!this.checkCurrentCallIsActive()||this.currentSession.refer(e)}checkCurrentCallIsActive(){return!this.currentSession||!this.currentSession.isEstablished()?(this.onChangeState(n.ERROR,{msg:"当前通话不存在或已销毁，无法执行该操作。"}),!1):!0}micCheck(){if(!navigator.mediaDevices){this.onChangeState(n.MIC_ERROR,{msg:"麦克风检测异常,请检查麦克风权限是否开启,是否在HTTPS站点"});return}navigator.mediaDevices.getUserMedia(this.constraints).then(e=>{console.log("麦克风获取成功"),e.getTracks().forEach(t=>{t.stop()})}).catch(()=>{this.onChangeState(n.MIC_ERROR,{msg:"麦克风检测异常,请检查麦克风"})})}cleanCallingData(){this.outgoingSession=void 0,this.incomingSession=void 0,this.currentSession=void 0,this.direction=void 0,this.audioView.srcObject&&(this.audioView.srcObject.getTracks().forEach(t=>t.stop()),this.audioView.srcObject=null),clearInterval(this.currentLatencyStatTimer),this.currentLatencyStatTimer=void 0,this.currentStatReport={outboundPacketsSent:0,outboundLost:0,inboundLost:0,inboundPacketsSent:0}}}return L});
